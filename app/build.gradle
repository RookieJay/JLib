apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-parcelize' // 启用 Parcelize 插件

android {
    compileSdkVersion 32

    defaultConfig {
        applicationId "pers.jay.library"
        minSdkVersion 19
        targetSdkVersion 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //指定room.schemaLocation生成的文件路径  处理Room 警告 Schema export Error
        // java 配置
//        javaCompileOptions {
//            annotationProcessorOptions {
//                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
//            }
//        }

        // kotlin 配置
        kapt {
            arguments {
                arg("room.schemaLocation", "$projectDir/schemas")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    buildFeatures {
        dataBinding true
        viewBinding true
//        compose true
    }

//    composeOptions {
//        kotlinCompilerExtensionVersion '1.0.0-rc02'
//    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(':jay_lib')
    def common = rootProject.ext.common
    def network = rootProject.ext.network
    def jetpack = rootProject.ext.jetpack
    def ui = rootProject.ext.ui
    def tools = rootProject.ext.tools
    def imageLoad = rootProject.ext.imageLoad
    implementation common.activityKtx
    implementation common.appcompat
    implementation ui.constraintlayoutx
    implementation ui.loadSir

    // image-load
    implementation imageLoad.glide

    // network
    implementation network.moshi
    implementation network.moshiKotlin
    implementation network.retrofitConverterMoshi
    kapt network.moshiCodeGen

    // paging 
    implementation jetpack.pagingRuntime
    implementation jetpack.pagingCommon
    implementation jetpack.pagingKtx
//    implementation jetpack.composeUI
//    implementation jetpack.composeUITool
//    implementation jetpack.composeFoundation
//    implementation jetpack.composeMaterial
//    implementation jetpack.composeMDIconsCore
//    implementation jetpack.composeMDIconsExt
//    implementation jetpack.composeActivity
//    implementation jetpack.composeViewModel
//    implementation jetpack.composeLiveData
//    implementation jetpack.composeUITest

    implementation cache.roomRuntime
    implementation cache.roomKtx
    kapt cache.roomCompiler

    implementation ui.brvah

    debugImplementation tools.dbDebug

}